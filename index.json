[{"body":"The Quick Start guide should help getting started with Coat as easy as possible.\nThe User Guide is the thorough description of all aspects of Coat.\nThe Roadmap gives an overview of the possible further enhancement of Coat.\nQuick Start User Guide Roadmap ","link":"https://poiu-de.github.io/coat-site/docs/","title":"Coat — Config of Annotated Types"},{"body":"Coat consists of two separate jars.\n The annotation processor to generate the config classes. Only needed at compile time. The runtime package containing the common base class for all generated config classes and the default type converters. Needed at runtime.  To use Coat in a maven based project use the following maven coordinates:\n1 \u0026lt;!-- Contains the annotation processor. Not needed at runtime. --\u0026gt; 2 \u0026lt;dependency\u0026gt; 3 \u0026lt;groupId\u0026gt;de.poiu.coat\u0026lt;/groupId\u0026gt; 4 \u0026lt;artifactId\u0026gt;coat-processor\u0026lt;/artifactId\u0026gt; 5 \u0026lt;version\u0026gt;0.0.1\u0026lt;/version\u0026gt; 6 \u0026lt;scope\u0026gt;provided\u0026lt;/scope\u0026gt; 7 \u0026lt;/dependency\u0026gt; 8 9 \u0026lt;!-- Contains the converters and base classes. Needed at runtime. --\u0026gt; 10 \u0026lt;dependency\u0026gt; 11 \u0026lt;groupId\u0026gt;de.poiu.coat\u0026lt;/groupId\u0026gt; 12 \u0026lt;artifactId\u0026gt;coat-runtime\u0026lt;/artifactId\u0026gt; 13 \u0026lt;version\u0026gt;0.0.1\u0026lt;/version\u0026gt; 14 \u0026lt;/dependency\u0026gt; ","link":"https://poiu-de.github.io/coat-site/docs/quick_start/installation/","title":"Installation"},{"body":"Coat has no runtime dependencies on other libraries.\nThe annotation processor has some dependencies on other libraries (which is why it is recommended to use maven as it resolves those dependencies automatically), but none of them are needed at runtime.\nCoat can be used with Java 11 or higher.\n","link":"https://poiu-de.github.io/coat-site/docs/quick_start/prerequisites/","title":"Prerequisites"},{"body":"","link":"https://poiu-de.github.io/coat-site/docs/quick_start/","title":"Quick Start"},{"body":"These docs consists of two parts:\n Hugo Compose Themes docs Hugo Clarity Theme docs.  Please note that the features listed under each theme are independent of each other. That is to say, some features may only be found in one theme and not in both.\nCompose Theme Docs Clarity Theme Docs ","link":"https://poiu-de.github.io/coat-site/docs/index_orig/","title":"Themes' Docs"},{"body":"Create config interface Generate concrete config class Use the generated config class ","link":"https://poiu-de.github.io/coat-site/docs/quick_start/usage/","title":"Usage"},{"body":"Welcome to the Compose theme user guide! This guide shows you how to get started creating technical documentation sites using Compose, including site customization and how to use Compose's blocks and templates.\nGet started now ","link":"https://poiu-de.github.io/coat-site/docs/user_guide/","title":"User Guide"},{"body":"","link":"https://poiu-de.github.io/coat-site/docs/user_guide/annotations/","title":"Annotations"},{"body":"Generate typesafe config classes Coat is an annotation processor to generate classes for reading configuration values into typesafe objects.\nShort Usage  Define an interface representing your config object.  1import de.poiu.coat.annotation.Coat; 2 3@Coat.Config 4public interface MyConfig { 5 @Coat.Param(key = \u0026#34;appName\u0026#34;) 6 public String appName(); 7 8 @Coat.Param(key = \u0026#34;listenPort\u0026#34;) 9 public int listenPort(); 10 11 @Coat.Param(key = \u0026#34;desription\u0026#34;) 12 public Optional\u0026lt;String\u0026gt; description(); 13}  Use the generated class.  1final MyConfig config= 2 new ImmutableMyConfig( 3 new File(\u0026#34;/path/to/config.properties\u0026#34;)); 4 5final String appName = config.appName(); 6final int listenPort = config.listenPort(); 7config.description().ifPresent( 8 … 9); 10 11 12 13   License Coat is licensed under the terms of the Apache license 2.0.\nQuick StartUser Guide\n","link":"https://poiu-de.github.io/coat-site/","title":"Coat — Config of Annotated Types"},{"body":"","link":"https://poiu-de.github.io/coat-site/docs/user_guide/overview/","title":"Overview"},{"body":"","link":"https://poiu-de.github.io/coat-site/docs/roadmap/","title":"Roadmap"},{"body":"Builtin types Registering custom types ","link":"https://poiu-de.github.io/coat-site/docs/user_guide/supported_types/","title":"Supported Types"},{"body":"","link":"https://poiu-de.github.io/coat-site/docs/user_guide/validation/","title":"Validation"}]
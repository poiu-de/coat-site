<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>User Guide on Coat — Config of Annotated Types</title><link>https://poiu-de.github.io/coat-site/docs/user_guide/</link><description>Recent content in User Guide on Coat — Config of Annotated Types</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://poiu-de.github.io/coat-site/docs/user_guide/index.xml" rel="self" type="application/rss+xml"/><item><title>Annotations</title><link>https://poiu-de.github.io/coat-site/docs/user_guide/02_annotations/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://poiu-de.github.io/coat-site/docs/user_guide/02_annotations/</guid><description>Coat provides two annotations, a type-level annotation @Coat.Config and a method-level annotation @Coat.Param. Both annotations are mandatory.
@Coat.Config Each interface that should be processed by the annotation processor must be annotated with @Coat.Config.
The generated class will always be generated in the same package as the annotated interfaec.
The name of the generated class is by the default the interface name with Immutable prepended to it. One exception is if the interface name starts with an underscore.</description></item><item><title>Validation</title><link>https://poiu-de.github.io/coat-site/docs/user_guide/03_validation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://poiu-de.github.io/coat-site/docs/user_guide/03_validation/</guid><description>The generated config class allows the validation of the configuration with the method validate(). This can be used to fail early in case the given configuration is missing some values or existing values cannot be converted into the specified type.
If the configuration is valid this method just returns.
If the configuration is invalid, it will throw a ConfigValidationException. This exception has a method getValidationResult() that returns a value of type ValidationResult that contains more information about the missing or wrong config values.</description></item><item><title>Supported Types</title><link>https://poiu-de.github.io/coat-site/docs/user_guide/04_supported_types/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://poiu-de.github.io/coat-site/docs/user_guide/04_supported_types/</guid><description>Builtin types The following types are supported by Coat out of the box and can directly be used as return types of the accessor methods in the annotated interface.
java.lang.String java.time.Duration java.time.LocalDate java.time.LocalDateTime java.time.LocalTime java.io.File java.nio.file.Path java.nio.charset.Charset java.net.InetAddress java.security.MessageDigest For each supported type a converter class exists in the package de.poiu.coat.convert. Refer to the corresponding Java API docs for details about the expected format of the input string.</description></item></channel></rss>